// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UFPCore.Data;

namespace UFPCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("UFPCore.Areas.Identity.Pages.Account.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("InvitedBy");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("UFPCore.Models.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bottom");

                    b.Property<int>("CLQF1");

                    b.Property<int>("CLQF2");

                    b.Property<int>("CLQF3");

                    b.Property<int>("CLQF4");

                    b.Property<int>("CLQF5");

                    b.Property<int>("CLQF6");

                    b.Property<int>("CLQF7");

                    b.Property<int>("CLQF8");

                    b.Property<int>("CLRunnerUp");

                    b.Property<int>("CLSF1");

                    b.Property<int>("CLSF2");

                    b.Property<int>("CLSF3");

                    b.Property<int>("CLSF4");

                    b.Property<int>("CLWinner");

                    b.Property<int>("CPlayoff1");

                    b.Property<int>("CPlayoff2");

                    b.Property<int>("CPlayoff3");

                    b.Property<int>("CPlayoff4");

                    b.Property<int>("CPlayoffWinner");

                    b.Property<int>("CRelegation1");

                    b.Property<int>("CRelegation2");

                    b.Property<int>("CRelegation3");

                    b.Property<int>("CRunnerUp");

                    b.Property<int>("CTitle");

                    b.Property<int>("Con100");

                    b.Property<int>("Con25");

                    b.Property<int>("Con50");

                    b.Property<int>("Con5in1");

                    b.Property<int>("Con75");

                    b.Property<int>("FACQF1");

                    b.Property<int>("FACQF2");

                    b.Property<int>("FACQF3");

                    b.Property<int>("FACQF4");

                    b.Property<int>("FACQF5");

                    b.Property<int>("FACQF6");

                    b.Property<int>("FACQF7");

                    b.Property<int>("FACQF8");

                    b.Property<int>("FACRunnerUp");

                    b.Property<int>("FACSF1");

                    b.Property<int>("FACSF2");

                    b.Property<int>("FACSF3");

                    b.Property<int>("FACSF4");

                    b.Property<int>("FACWinner");

                    b.Property<int>("FirstScore100");

                    b.Property<int>("FirstScore25");

                    b.Property<int>("FirstScore50");

                    b.Property<int>("FirstScore75");

                    b.Property<int>("LOPlayoff1");

                    b.Property<int>("LOPlayoff2");

                    b.Property<int>("LOPlayoff3");

                    b.Property<int>("LOPlayoff4");

                    b.Property<int>("LOPlayoffWinner");

                    b.Property<int>("LORelegation1");

                    b.Property<int>("LORelegation2");

                    b.Property<int>("LORelegation3");

                    b.Property<int>("LORunnerUp");

                    b.Property<int>("LOTitle");

                    b.Property<int>("LTPlayoff1");

                    b.Property<int>("LTPlayoff2");

                    b.Property<int>("LTPlayoff3");

                    b.Property<int>("LTPlayoff4");

                    b.Property<int>("LTPlayoffWinner");

                    b.Property<int>("LTRelegation1");

                    b.Property<int>("LTRelegation2");

                    b.Property<int>("LTRelegation3");

                    b.Property<int>("LTRunnerUp");

                    b.Property<int>("LTTitle");

                    b.Property<int>("Lose5inRow");

                    b.Property<int>("ManagersOut");

                    b.Property<int>("NLPlayoffWinner");

                    b.Property<int>("NLTitle");

                    b.Property<int>("Place1");

                    b.Property<int>("Place10");

                    b.Property<int>("Place11");

                    b.Property<int>("Place12");

                    b.Property<int>("Place13");

                    b.Property<int>("Place14");

                    b.Property<int>("Place15");

                    b.Property<int>("Place16");

                    b.Property<int>("Place17");

                    b.Property<int>("Place18");

                    b.Property<int>("Place19");

                    b.Property<int>("Place2");

                    b.Property<int>("Place20");

                    b.Property<int>("Place3");

                    b.Property<int>("Place4");

                    b.Property<int>("Place5");

                    b.Property<int>("Place6");

                    b.Property<int>("Place7");

                    b.Property<int>("Place8");

                    b.Property<int>("Place9");

                    b.Property<int>("PointsClear");

                    b.Property<int>("PointsDifference");

                    b.Property<int>("Score1");

                    b.Property<int>("Score10");

                    b.Property<int>("Score11");

                    b.Property<int>("Score12");

                    b.Property<int>("Score13");

                    b.Property<int>("Score14");

                    b.Property<int>("Score15");

                    b.Property<int>("Score16");

                    b.Property<int>("Score17");

                    b.Property<int>("Score18");

                    b.Property<int>("Score19");

                    b.Property<int>("Score2");

                    b.Property<int>("Score20");

                    b.Property<int>("Score21");

                    b.Property<int>("Score22");

                    b.Property<int>("Score23");

                    b.Property<int>("Score24");

                    b.Property<int>("Score25");

                    b.Property<int>("Score26");

                    b.Property<int>("Score27");

                    b.Property<int>("Score28");

                    b.Property<int>("Score29");

                    b.Property<int>("Score3");

                    b.Property<int>("Score30");

                    b.Property<int>("Score31");

                    b.Property<int>("Score32");

                    b.Property<int>("Score33");

                    b.Property<int>("Score34");

                    b.Property<int>("Score35");

                    b.Property<int>("Score36");

                    b.Property<int>("Score37");

                    b.Property<int>("Score38");

                    b.Property<int>("Score39");

                    b.Property<int>("Score4");

                    b.Property<int>("Score40");

                    b.Property<int>("Score41");

                    b.Property<int>("Score42");

                    b.Property<int>("Score43");

                    b.Property<int>("Score44");

                    b.Property<int>("Score45");

                    b.Property<int>("Score46");

                    b.Property<int>("Score47");

                    b.Property<int>("Score48");

                    b.Property<int>("Score49");

                    b.Property<int>("Score5");

                    b.Property<int>("Score50");

                    b.Property<int>("Score51");

                    b.Property<int>("Score52");

                    b.Property<int>("Score53");

                    b.Property<int>("Score54");

                    b.Property<int>("Score55");

                    b.Property<int>("Score56");

                    b.Property<int>("Score57");

                    b.Property<int>("Score58");

                    b.Property<int>("Score59");

                    b.Property<int>("Score5in1");

                    b.Property<int>("Score6");

                    b.Property<int>("Score60");

                    b.Property<int>("Score61");

                    b.Property<int>("Score62");

                    b.Property<int>("Score63");

                    b.Property<int>("Score64");

                    b.Property<int>("Score65");

                    b.Property<int>("Score66");

                    b.Property<int>("Score67");

                    b.Property<int>("Score68");

                    b.Property<int>("Score69");

                    b.Property<int>("Score7");

                    b.Property<int>("Score70");

                    b.Property<int>("Score71");

                    b.Property<int>("Score72");

                    b.Property<int>("Score73");

                    b.Property<int>("Score74");

                    b.Property<int>("Score75");

                    b.Property<int>("Score76");

                    b.Property<int>("Score77");

                    b.Property<int>("Score78");

                    b.Property<int>("Score8");

                    b.Property<int>("Score9");

                    b.Property<int>("TeamHattrick");

                    b.Property<int>("TeamLoseManager");

                    b.Property<int>("Top");

                    b.Property<string>("TopScorePlayer");

                    b.Property<int>("TopScoreTeam");

                    b.Property<int>("TwoReds");

                    b.Property<int>("Win20");

                    b.Property<int>("Win5inRow");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("UFPCore.Models.Payment.PaymentConfirmation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UsersId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("PaymentConfirmations");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.ChampionsLge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QF1");

                    b.Property<int>("QF2");

                    b.Property<int>("QF3");

                    b.Property<int>("QF4");

                    b.Property<int>("QF5");

                    b.Property<int>("QF6");

                    b.Property<int>("QF7");

                    b.Property<int>("QF8");

                    b.Property<int>("RunnerUp");

                    b.Property<int>("SF1");

                    b.Property<int>("SF2");

                    b.Property<int>("SF3");

                    b.Property<int>("SF4");

                    b.Property<string>("TopScorePlayer");

                    b.Property<int>("TopScoreTeam");

                    b.Property<string>("User");

                    b.Property<int>("Winner");

                    b.HasKey("Id");

                    b.ToTable("ChampionsLge");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.Championship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Playoff1");

                    b.Property<int>("Playoff2");

                    b.Property<int>("Playoff3");

                    b.Property<int>("Playoff4");

                    b.Property<int>("PlayoffWinner");

                    b.Property<int>("Relegation1");

                    b.Property<int>("Relegation2");

                    b.Property<int>("Relegation3");

                    b.Property<int>("RunnerUp");

                    b.Property<int>("Title");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("Championship");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.ChristmasPredictions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bottom");

                    b.Property<int>("ManagersOut");

                    b.Property<int>("PointsClear");

                    b.Property<int>("PointsDifference");

                    b.Property<int>("Top");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("ChristmasPredictions");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.Completions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ChampionsLgeCom");

                    b.Property<bool>("ChampionshipCom");

                    b.Property<bool>("EoSCom");

                    b.Property<bool>("FACupCom");

                    b.Property<bool>("FinalCom");

                    b.Property<bool>("FirstsCom");

                    b.Property<bool>("LeagueOneCom");

                    b.Property<bool>("LeagueTwoCom");

                    b.Property<bool>("NationalLeagueCom");

                    b.Property<bool>("ScoresCom");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("Completions");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.FACup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QF1");

                    b.Property<int>("QF2");

                    b.Property<int>("QF3");

                    b.Property<int>("QF4");

                    b.Property<int>("QF5");

                    b.Property<int>("QF6");

                    b.Property<int>("QF7");

                    b.Property<int>("QF8");

                    b.Property<int>("RunnerUp");

                    b.Property<int>("SF1");

                    b.Property<int>("SF2");

                    b.Property<int>("SF3");

                    b.Property<int>("SF4");

                    b.Property<string>("User");

                    b.Property<int>("Winner");

                    b.HasKey("Id");

                    b.ToTable("FACup");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.FirstPredictions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Con100");

                    b.Property<int>("Con25");

                    b.Property<int>("Con50");

                    b.Property<int>("Con5in1");

                    b.Property<int>("Con75");

                    b.Property<int>("Lose5inRow");

                    b.Property<int>("Score100");

                    b.Property<int>("Score25");

                    b.Property<int>("Score50");

                    b.Property<int>("Score5in1");

                    b.Property<int>("Score75");

                    b.Property<int>("TeamHattrick");

                    b.Property<int>("TeamLoseManager");

                    b.Property<int>("TwoReds");

                    b.Property<string>("User");

                    b.Property<int>("Win20");

                    b.Property<int>("Win5inRow");

                    b.HasKey("Id");

                    b.ToTable("Firsts");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.LeagueOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Playoff1");

                    b.Property<int>("Playoff2");

                    b.Property<int>("Playoff3");

                    b.Property<int>("Playoff4");

                    b.Property<int>("PlayoffWinner");

                    b.Property<int>("Relegation1");

                    b.Property<int>("Relegation2");

                    b.Property<int>("Relegation3");

                    b.Property<int>("RunnerUp");

                    b.Property<int>("Title");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("LeagueOne");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.LeagueTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Playoff1");

                    b.Property<int>("Playoff2");

                    b.Property<int>("Playoff3");

                    b.Property<int>("Playoff4");

                    b.Property<int>("PlayoffWinner");

                    b.Property<int>("Relegation1");

                    b.Property<int>("Relegation2");

                    b.Property<int>("Relegation3");

                    b.Property<int>("RunnerUp");

                    b.Property<int>("Title");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("LeagueTwo");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.NationalLeague", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlayoffWinner");

                    b.Property<int>("Title");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("NationalLeague");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.Scores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Score1");

                    b.Property<int>("Score10");

                    b.Property<int>("Score11");

                    b.Property<int>("Score12");

                    b.Property<int>("Score13");

                    b.Property<int>("Score14");

                    b.Property<int>("Score15");

                    b.Property<int>("Score16");

                    b.Property<int>("Score17");

                    b.Property<int>("Score18");

                    b.Property<int>("Score19");

                    b.Property<int>("Score2");

                    b.Property<int>("Score20");

                    b.Property<int>("Score21");

                    b.Property<int>("Score22");

                    b.Property<int>("Score23");

                    b.Property<int>("Score24");

                    b.Property<int>("Score25");

                    b.Property<int>("Score26");

                    b.Property<int>("Score27");

                    b.Property<int>("Score28");

                    b.Property<int>("Score29");

                    b.Property<int>("Score3");

                    b.Property<int>("Score30");

                    b.Property<int>("Score31");

                    b.Property<int>("Score32");

                    b.Property<int>("Score33");

                    b.Property<int>("Score34");

                    b.Property<int>("Score35");

                    b.Property<int>("Score36");

                    b.Property<int>("Score37");

                    b.Property<int>("Score38");

                    b.Property<int>("Score39");

                    b.Property<int>("Score4");

                    b.Property<int>("Score40");

                    b.Property<int>("Score41");

                    b.Property<int>("Score42");

                    b.Property<int>("Score43");

                    b.Property<int>("Score44");

                    b.Property<int>("Score45");

                    b.Property<int>("Score46");

                    b.Property<int>("Score47");

                    b.Property<int>("Score48");

                    b.Property<int>("Score49");

                    b.Property<int>("Score5");

                    b.Property<int>("Score50");

                    b.Property<int>("Score51");

                    b.Property<int>("Score52");

                    b.Property<int>("Score53");

                    b.Property<int>("Score54");

                    b.Property<int>("Score55");

                    b.Property<int>("Score56");

                    b.Property<int>("Score57");

                    b.Property<int>("Score58");

                    b.Property<int>("Score59");

                    b.Property<int>("Score6");

                    b.Property<int>("Score60");

                    b.Property<int>("Score61");

                    b.Property<int>("Score62");

                    b.Property<int>("Score63");

                    b.Property<int>("Score64");

                    b.Property<int>("Score65");

                    b.Property<int>("Score66");

                    b.Property<int>("Score67");

                    b.Property<int>("Score68");

                    b.Property<int>("Score69");

                    b.Property<int>("Score7");

                    b.Property<int>("Score70");

                    b.Property<int>("Score71");

                    b.Property<int>("Score72");

                    b.Property<int>("Score73");

                    b.Property<int>("Score74");

                    b.Property<int>("Score75");

                    b.Property<int>("Score76");

                    b.Property<int>("Score77");

                    b.Property<int>("Score78");

                    b.Property<int>("Score8");

                    b.Property<int>("Score9");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("UFPCore.Models.Predictions.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Place1");

                    b.Property<int>("Place10");

                    b.Property<int>("Place11");

                    b.Property<int>("Place12");

                    b.Property<int>("Place13");

                    b.Property<int>("Place14");

                    b.Property<int>("Place15");

                    b.Property<int>("Place16");

                    b.Property<int>("Place17");

                    b.Property<int>("Place18");

                    b.Property<int>("Place19");

                    b.Property<int>("Place2");

                    b.Property<int>("Place20");

                    b.Property<int>("Place3");

                    b.Property<int>("Place4");

                    b.Property<int>("Place5");

                    b.Property<int>("Place6");

                    b.Property<int>("Place7");

                    b.Property<int>("Place8");

                    b.Property<int>("Place9");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("UFPCore.Models.UpdateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CLFinalResults");

                    b.Property<int>("CLQFs");

                    b.Property<int>("CLSFs");

                    b.Property<int>("ChFinalTable");

                    b.Property<int>("ChPlayoffs");

                    b.Property<int>("Christmas");

                    b.Property<int>("Con100");

                    b.Property<int>("Con25");

                    b.Property<int>("Con50");

                    b.Property<int>("Con5in1");

                    b.Property<int>("Con75");

                    b.Property<int>("CurrentUpdate");

                    b.Property<int>("FACFinalResults");

                    b.Property<int>("FACQFs");

                    b.Property<int>("FACSFs");

                    b.Property<int>("LOFinalTable");

                    b.Property<int>("LOPlayoffs");

                    b.Property<int>("LTFinalTable");

                    b.Property<int>("LTPlayoffs");

                    b.Property<int>("Lose5inRow");

                    b.Property<int>("Match1");

                    b.Property<int>("Match10");

                    b.Property<int>("Match11");

                    b.Property<int>("Match12");

                    b.Property<int>("Match13");

                    b.Property<int>("Match14");

                    b.Property<int>("Match15");

                    b.Property<int>("Match16");

                    b.Property<int>("Match17");

                    b.Property<int>("Match18");

                    b.Property<int>("Match19");

                    b.Property<int>("Match2");

                    b.Property<int>("Match20");

                    b.Property<int>("Match21");

                    b.Property<int>("Match22");

                    b.Property<int>("Match23");

                    b.Property<int>("Match24");

                    b.Property<int>("Match25");

                    b.Property<int>("Match26");

                    b.Property<int>("Match27");

                    b.Property<int>("Match28");

                    b.Property<int>("Match29");

                    b.Property<int>("Match3");

                    b.Property<int>("Match30");

                    b.Property<int>("Match31");

                    b.Property<int>("Match32");

                    b.Property<int>("Match33");

                    b.Property<int>("Match34");

                    b.Property<int>("Match35");

                    b.Property<int>("Match36");

                    b.Property<int>("Match37");

                    b.Property<int>("Match38");

                    b.Property<int>("Match39");

                    b.Property<int>("Match4");

                    b.Property<int>("Match5");

                    b.Property<int>("Match6");

                    b.Property<int>("Match7");

                    b.Property<int>("Match8");

                    b.Property<int>("Match9");

                    b.Property<int>("NLFinalTable");

                    b.Property<int>("NLPlayoffs");

                    b.Property<int>("PLFinalResults");

                    b.Property<int>("Score100");

                    b.Property<int>("Score25");

                    b.Property<int>("Score50");

                    b.Property<int>("Score5in1");

                    b.Property<int>("Score75");

                    b.Property<int>("TeamHattrick");

                    b.Property<int>("TeamLoseManager");

                    b.Property<int>("TwoReds");

                    b.Property<int>("Win20");

                    b.Property<int>("Win5inRow");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("UpdateInfos");
                });

            modelBuilder.Entity("UFPCore.Models.UserPoints", b =>
                {
                    b.Property<string>("UFPId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("CurrentScore");

                    b.Property<float>("Update01");

                    b.Property<float>("Update02");

                    b.Property<float>("Update03");

                    b.Property<float>("Update04");

                    b.Property<float>("Update05");

                    b.Property<float>("Update06");

                    b.Property<float>("Update07");

                    b.Property<float>("Update08");

                    b.Property<float>("Update09");

                    b.Property<float>("Update10");

                    b.Property<float>("Update11");

                    b.Property<float>("Update12");

                    b.Property<float>("Update13");

                    b.Property<float>("Update14");

                    b.Property<float>("Update15");

                    b.Property<float>("Update16");

                    b.Property<float>("Update17");

                    b.Property<float>("Update18");

                    b.Property<float>("Update19");

                    b.Property<float>("Update20");

                    b.Property<float>("Update21");

                    b.Property<float>("Update22");

                    b.Property<float>("Update23");

                    b.Property<float>("Update24");

                    b.Property<float>("Update25");

                    b.Property<float>("Update26");

                    b.Property<float>("Update27");

                    b.Property<float>("Update28");

                    b.Property<float>("Update29");

                    b.Property<float>("Update30");

                    b.Property<float>("Update31");

                    b.Property<float>("Update32");

                    b.Property<float>("Update33");

                    b.Property<float>("Update34");

                    b.Property<float>("Update35");

                    b.Property<float>("Update36");

                    b.Property<float>("Update37");

                    b.Property<float>("Update38");

                    b.HasKey("UFPId");

                    b.ToTable("UserPoints");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("UFPCore.Areas.Identity.Pages.Account.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("UFPCore.Areas.Identity.Pages.Account.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UFPCore.Areas.Identity.Pages.Account.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("UFPCore.Areas.Identity.Pages.Account.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
